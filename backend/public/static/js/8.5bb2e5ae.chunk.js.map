{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,uMCUEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCkBpCE,G,MArBE,SAAAV,GACf,OACE,wBAAIC,UAAU,aACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACd,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACN,yBAAKX,UAAU,oBAEb,kBAAC,EAAD,CAAQK,MAAK,UAAKO,iDAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAEjF,yBAAKb,UAAU,mBACb,4BAAKD,EAAMc,MACX,4BACGd,EAAMe,WADT,IAC2C,IAArBf,EAAMe,WAAmB,QAAU,gBCoCtDC,G,MAxBG,SAAAhB,GAEhB,OACyB,IAAvBA,EAAMiB,MAAMC,OAER,yBAAKjB,UAAU,UACb,kBAACF,EAAA,EAAD,KACE,iDAIN,wBAAIE,UAAU,cACXD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,e,QCbrBK,UA9BD,WAAM,MAEoBC,oBAAS,GAF7B,mBAEXC,EAFW,KAEEC,EAFF,OAGoCC,cAA9CC,EAHU,EAGVA,UAAWC,EAHD,EAGCA,MAAOC,EAHR,EAGQA,YAAaC,EAHrB,EAGqBA,WAevC,OAZAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYH,EACzBjB,4DAHa,OAETqB,EAFS,OAIfR,EAAeQ,EAAaC,OAJb,+GAAH,qDAQhBC,KACC,CAACN,IAGF,kBAAC,IAAMO,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYT,MAAOA,EAAOU,QAASR,IAClCH,GACC,yBAAK3B,UAAU,UACb,kBAACuC,EAAA,EAAD,QAEFZ,GAAaH,GAAe,kBAAC,EAAD,CAAWR,MAAOQ","file":"static/js/8.5bb2e5ae.chunk.js","sourcesContent":["//41\nimport React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;","//41-\n\nimport React from 'react';\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;","//40-userItem component\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n//41-\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            {/* 41-<img src={props.image} alt={props.name} /> */}\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","//39- adding UsrList page-component\nimport React from 'react';\nimport UserItem from './UserItem';\n//43-\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n// const UsersList = props => {\n//   // if there is no user -USE TERNARY EXPRESSION\n//   if (props.items.length === 0) {\n//     return (\n//       <div className=\"center\">\n//         <h2>No users found.</h2>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <ul className=\"users-list\">\n//       {props.items.map(user => (\n//         <UserItem\n//           key={user.id}\n//           id={user.id}\n//           image={user.image}\n//           name={user.name}\n//           placeCount={user.places}\n//         />\n//       ))}\n//     </ul>\n//   );\n// };\n\n\nconst UsersList = props => {\n  // if there is no user -USE TERNARY EXPRESSION\n  return (\n    props.items.length === 0 ?\n      (\n        <div className=\"center\">\n          <Card>\n            <h2>No users found.</h2>\n          </Card>\n        </div>\n      ) :\n      <ul className=\"users-list\">\n        {props.items.map(user => (\n          <UserItem\n            key={user.id}\n            id={user.id}\n            image={user.image}\n            name={user.name}\n            placeCount={user.places.length}\n          />\n        ))}\n      </ul>\n  );\n};\nexport default UsersList;\n","// 39- send user data to UsersList components\nimport React, { useEffect, useState } from 'react';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';      // 149- getting users with a  get request\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport UsersList from '../components/UsersList';\nimport { useHttpClient } from '../../shared/hooks/http-hook';       // 152 - using the http-hook to get users\n\nconst Users = () => {\n  // 149- getting users with a  get request\n  const [loadedUsers, setLoadedUsers] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();    // 152 - using the http-hook to get users\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users');  // 152 - using the http-hook to get users\n        setLoadedUsers(responseData.users);\n      } catch (error) {\n      };\n    };\n    fetchUsers();\n  }, [sendRequest])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>)}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"sourceRoot":""}